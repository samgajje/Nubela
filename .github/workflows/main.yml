name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.14.0-alpha.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint
      - name: Run linting
        run: |
          pylint app.py
  build:
    needs: lint
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/devops-flask-app:latest ./app

    - name: Push Docker Image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/devops-flask-app:latest

  deploy:
     needs: build
     runs-on: ubuntu-latest
    # Set up AWS CLI
     steps:
       - name: checkout repository
         uses: actions/checkout@v4
        # --------- Setup AWS and kubectl ---------
       - name: Configure AWS credentials
         uses: aws-actions/configure-aws-credentials@v3
         with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

       - name: Install kubectl
         run: |
          curl -LO "https://dl.k8s.io/release/$(curl -Ls https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

       - name: Update kubeconfig for EKS
         run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}

    # --------- Deploy to Kubernetes ---------
       - name: Deploy Kubernetes manifests
         run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
