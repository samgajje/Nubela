name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: Login to DockerHub
      uses: actions/checkout@v4
    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/devops-flask-app:latest ./app

    - name: Push Docker Image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/devops-flask-app:latest

  deploy:
     runs-on: ubuntu-latest
    # Set up AWS CLI
     steps:
     - name: Create EKS Cluster
       run: |
          aws eks create-cluster \
            --name ${{ secrets.EKS_CLUSTER_NAME }} \
            --role-arn ${{ secrets.EKS_ROLE_ARN }} \
            --resources-vpc-config subnetIds=${{ secrets.SUBNET_IDS }},securityGroupIds=${{ secrets.SG_IDS }} \
            --region ${{ secrets.AWS_REGION }}

      # Step 5: Wait for the EKS Cluster to be created
     - name: Wait for EKS Cluster to be active
       run: |
         aws eks --region ${{ secrets.AWS_REGION }} wait cluster-active --name ${{ secrets.EKS_CLUSTER_NAME }}

      # Step 6: Update kubeconfig for kubectl
     - name: Set up kubectl for EKS
       run: |
          aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}

      # Step 7: Deploy the application to the EKS cluster
     - name: Deploy to EKS
       run: |
          kubectl apply -f k8s/deployment.yaml
          
